//Brandon Nguyen, 2nd Period
package textExcel;

public class FormulaCell extends RealCell{
	
	private String formula;
	private Cell[][] grid;

	public FormulaCell(String formula, Cell[][] spreadsheet) {
		// TODO Auto-generated constructor stub
		this.formula = formula;
		this.grid = spreadsheet;
		setRealCell(formula);
	}

	public double getDoubleValue(){
		String[] formula = getRealCell().split(" ");
		if(formula.length == 3){
			System.out.println(formula[1]);
			return Double.parseDouble(formula[1]);
		}
		if((formula[1].toUpperCase().equals("AVG")) || (formula[1].toUpperCase().equals("SUM"))){
			
			
			if(formula[1].toUpperCase().equals("AVG")){
				double count = 0.0;
				formula[2] = formula[2].toUpperCase();
				//System.out.println("thingy" + formula[2]);
				int startRow = Integer.parseInt(formula[2].toUpperCase().substring(1, formula[2].indexOf('-')));
				int startCol = formula[2].charAt(0) + 'A';
				int endRow = Integer.parseInt(formula[2].toUpperCase().substring(formula[2].indexOf('-') + 2));
				int endCol = formula[2].charAt(formula[2].indexOf('-') + 1) + 'A';
				//System.out.println("start r" + startRow);
				//System.out.println("start c" + startCol);
				//System.out.println("end r" + endRow);
				//System.out.println("end c" + endCol);
				for(int i = startCol; i <= endCol; i++ ){
					if(startCol != endCol){
						for(int j = startRow; j <= 20; j++){
							count++;
							System.out.println("count" + count);
						}
						startRow = 0;
						
						//System.out.println(startRow);
					}else{
						for(int j = startRow; j <= endRow; j++){
							count++;
							System.out.println("count" + count);
						}
					}
				}
				//System.out.println("in avg" +formula[2].toUpperCase().substring(0, formula[2].indexOf('-')) + " " + 
						//formula[2].toUpperCase().substring(formula[2].indexOf('-') + 1));
				//System.out.println( "exit " + sum(formula[2].toUpperCase().substring(0, formula[2].indexOf('-')), 
						//formula[2].toUpperCase().substring(formula[2].indexOf('-') + 1)) / count);
				//System.out.println(count);
				return (sum(formula[2].toUpperCase().substring(0, formula[2].indexOf('-')), 
						formula[2].toUpperCase().substring(formula[2].indexOf('-') + 1))) / count;
			}else{
				return (sum(formula[2].toUpperCase().substring(0, formula[2].indexOf('-')), 
						formula[2].toUpperCase().substring(formula[2].indexOf('-') + 1)));
			}
		}else{
			double storeVal = 0.0;
			for(int i = 1; i < formula.length - 2; i += 2 ){
				double num = 0.0;
				double secondNum = 0.0;
				//SpreadsheetLocation cell = new SpreadsheetLocation(formula[i]);
			//	SpreadsheetLocation cell2 = new SpreadsheetLocation(formula[i + 2]);
				if(formula[i].toUpperCase().charAt(0) >= 'A' && formula[i].toUpperCase().charAt(0) <='L'){
						formula[i] = formula[i].toUpperCase();
						//System.out.println(formula[i]);
						SpreadsheetLocation cell = new SpreadsheetLocation(formula[i]);
						if(grid[cell.getRow()][cell.getCol()] instanceof RealCell){
							formula[i] = Double.toString(((RealCell)grid[cell.getRow()][cell.getCol()]).getDoubleValue());
						}else{
							formula[i] = "0.0";
						}
						//System.out.println(grid[cell.getRow()][cell.getCol()].abbreviatedCellText());
						

				}
				
				if(formula[i+2].toUpperCase().charAt(0) >= 'A' && formula[i+2].toUpperCase().charAt(0) <= 'L'){
						formula[i+2] = formula[i+2].toUpperCase();
						SpreadsheetLocation cell = new SpreadsheetLocation(formula[i + 2]);
						//System.out.println(formula[i + 2]);
						if(grid[cell.getRow()][cell.getCol()] instanceof RealCell){
							formula[i+2] = Double.toString(((RealCell)grid[cell.getRow()][cell.getCol()]).getDoubleValue());
						}else{
							formula[i+2] = "0.0";
						}
						//System.out.println(secondNum);
				}
				
				num = Double.parseDouble(formula[i]);
				//System.out.println(num);
				secondNum = Double.parseDouble(formula[i + 2]);
				//System.out.println(secondNum);
				
				if(formula[i + 1].equals("*")){
					storeVal = num * secondNum;
				}else if(formula[i + 1].equals("/")){
					storeVal = num / secondNum;
				}else if(formula[i + 1].equals("+")){
					storeVal = num + secondNum;
				}else{
					storeVal = num - secondNum;
				}
				formula[i+2] = Double.toString(storeVal);
				//System.out.println(formula[i+2]);
				//System.out.println(storeVal);
			}
			//System.out.println(storeVal);
			return storeVal;
		}
		//return 0.0;
	}
	
	public double sum(String cell, String end){	
		if(cell.charAt(0) == end.charAt(0) && Integer.parseInt(cell.substring(1)) > Integer.parseInt(end.substring(1))){
			cell = cell.substring(0, 1) + "" + (Integer.parseInt(cell.substring(1))- 1);
			System.out.println(cell);
		}
		SpreadsheetLocation loc = new SpreadsheetLocation(cell);
		String newCell = "";
		if(Integer.parseInt(cell.substring(1)) < 20){
			newCell = cell.charAt(0) + "";
			newCell += Integer.parseInt(cell.substring(1)) + 2;
			System.out.println("new Cell " + newCell);
		}else if (Integer.parseInt(cell.substring(1)) == 20 && cell.charAt(0) != end.charAt(0)){
			//System.out.println("new Cell value" + newCell);
			newCell = ((char)cell.charAt(0)) + 1 + "1";
			System.out.println("new Cell value" + newCell);
		}
		//make test for realcell and stuff
		if(grid[loc.getRow()][loc.getCol()] instanceof RealCell 
				|| grid[loc.getRow() + 1][loc.getCol() + 1] instanceof RealCell){
			if(cell.equals(end)){
				System.out.println("ended");
				return ((RealCell)grid[loc.getRow()][loc.getCol()]).getDoubleValue();
			}else{
				double first = 0.0;
				double second = 0.0;
				if(grid[loc.getRow()][loc.getCol()] instanceof RealCell ){
					 first = 
							((RealCell)grid[loc.getRow()][loc.getCol()]).getDoubleValue();
					System.out.println(" part of recursion" + first);
				}else if(grid[loc.getRow() + 1][loc.getCol() + 1] instanceof RealCell){
				
					second = 
						((RealCell)grid[loc.getRow() + 1][loc.getCol() + 1]).getDoubleValue();
				System.out.println(second);
				}
				double sum = first + second;
				System.out.println("sum of 1 and 2 " + sum);

				//System.out.println(newCell);
				
				//fix here........ maybe broken here

				return (sum + sum(newCell, end));
			}
		}//else{
			return sum(newCell, end);
		//}
	}
}
