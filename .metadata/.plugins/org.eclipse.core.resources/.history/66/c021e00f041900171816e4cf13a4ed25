//Brandon Nguyen, 2nd Period
package textExcel;

import java.util.Arrays;

public class FormulaCell extends RealCell{
	
	private String formula;
	private Cell[][] grid;

	public FormulaCell(String formula, Cell[][] spreadsheet) {
		// TODO Auto-generated constructor stub
		this.formula = formula;
		this.grid = spreadsheet;
		setRealCell(formula);
	}

	
	//broken here, fix here.....
	public double getDoubleValue(){
		String input = getRealCell().substring(2, getRealCell().length() - 2);
		String[] formula = input.split(" ");
		
		if(formula.length == 1){
			return Double.parseDouble(formula[0]);
			
		}else if((formula[0].toUpperCase().equals("AVG")) || (formula[0].toUpperCase().equals("SUM"))){
			double count = 1.0;
			
			String cell = formula[1].toUpperCase().substring(0, formula[1].indexOf('-'));
			String cell2 = formula[1].toUpperCase().substring(0, formula[1].indexOf('-'));
			String ending = formula[1].toUpperCase().substring(formula[1].indexOf('-') + 1);
			
			while(!(cell2.equals(ending))){
				SpreadsheetLocation loc = new SpreadsheetLocation (cell2);
				System.out.println("ahh" + cell2);
				 if (cell.substring(1).equals(ending.substring(1))){
					cell2 = ((char)(cell2.charAt(0) + 1)) + cell.substring(1);
					System.out.println(":( " +cell2);
					if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
						count++;
					}
					
				}else{
					cell2 = cell2.charAt(0) + "" + (Integer.parseInt(cell2.substring(1)) + 1);
					System.out.println("hi" + cell2);
					if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
						count++;
					}
					
				}

			}

			if(formula[0].toUpperCase().equals("AVG")){
				return (sum(cell, cell, ending)) / count;
			}else{
				return (sum (cell, cell, ending));
			}
			
		}else{
		
			
			double sum;
			if(formula[0].toUpperCase().charAt(0) >= 'A' && formula[0].toUpperCase().charAt(0) <='L'){
				formula[0] = formula[0].toUpperCase();
				//System.out.println(formula[i]);
				SpreadsheetLocation cell = new SpreadsheetLocation(formula[0]);
				if(grid[cell.getRow()][cell.getCol()] instanceof RealCell){
					sum = ((RealCell)grid[cell.getRow()][cell.getCol()]).getDoubleValue();
				}else{
					sum = 0.0;
				}
			}else{
				sum = Double.parseDouble(formula[0]);
			}
			
			if(formula[0].toUpperCase().charAt(0) >= 'A' && formula[0].toUpperCase().charAt(0) <='L'){
				formula[0] = formula[0].toUpperCase();
				//System.out.println(formula[i]);
				SpreadsheetLocation cell = new SpreadsheetLocation(formula[0]);
				if(grid[cell.getRow()][cell.getCol()] instanceof RealCell){
					sum = ((RealCell)grid[cell.getRow()][cell.getCol()]).getDoubleValue();
				}else{
					sum = 0.0;
				}
			}else{
				sum = Double.parseDouble(formula[0]);
			}

			for(int i = 1; i < formula.length - 1; i += 2 ){
				double num;
				
				if(formula[i + 1].toUpperCase().charAt(0) >= 'A' && formula[i + 1].toUpperCase().charAt(0) <='L'){
						formula[i + 1] = formula[i + 1].toUpperCase();
						//System.out.println(formula[i]);
						SpreadsheetLocation loc = new SpreadsheetLocation(formula[i + 1]);
						if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
							num = ((RealCell)grid[loc.getRow()][loc.getCol()]).getDoubleValue();
						}else{
							num = 0.0;
						}
						//System.out.println(grid[cell.getRow()][cell.getCol()].abbreviatedCellText());
				}else{
					num = Double.parseDouble(formula[i + 1]);
				}

				if(formula[i].equals("*")){
					sum *=  num;
				}else if(formula[i].equals("/")){
					sum /= num;
				}else if(formula[i].equals("+")){
					sum += num;
				}else{
					sum -= num;
			}
			}
			return sum;
		}
	}
	
	
	public double sum(String cell, String newCell, String end){	
		
		SpreadsheetLocation loc = new SpreadsheetLocation(newCell);
		
		if(newCell.equals(end)){
			if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
				return ((RealCell)grid[loc.getRow()][loc.getCol()]).getDoubleValue();
			}else{
				return 0.0;
			}
		}
		
		if(Character.toUpperCase(cell.charAt(0)) != Character.toUpperCase(end.charAt(0)) 
				&& Integer.parseInt(cell.substring(1)) == Integer.parseInt(end.substring(1))){
			newCell = ((char)(newCell.charAt(0) + 1)) + cell.substring(1);
			
		}else if( Character.toUpperCase(cell.charAt(0)) == Character.toUpperCase(end.charAt(0))
				&& Integer.parseInt(cell.substring(1)) <= Integer.parseInt(end.substring(1))){
			
			newCell = Character.toString(cell.charAt(0)) + (Integer.parseInt(newCell.substring(1)) + 1);
			
		}else{
			
			if(Integer.parseInt(newCell.substring(1)) < Integer.parseInt(end.substring(1))){
				
				newCell = Character.toString(newCell.charAt(0)) + (Integer.parseInt(newCell.substring(1)) + 1);

				
			}else if(Integer.parseInt(newCell.substring(1)) == Integer.parseInt(end.substring(1))){
				
				newCell = ((char)(newCell.charAt(0) + 1)) + "" + 1;
				
			}else{
				newCell = ((char)(newCell.charAt(0) + 1)) + "" + cell.substring(1);
				
			}
		}

		double first;
		if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
			 first = ((RealCell)grid[loc.getRow()][loc.getCol()]).getDoubleValue();
			return (first + sum(cell, newCell, end));
		}else{
			return sum(cell, newCell, end);
		}
	}
	
	public double count(String startCell, String cell, String endCell){
		
		SpreadsheetLocation loc = new SpreadsheetLocation (cell);
		if(cell.equals(endCell)){
			return 1.0;
		}else if (cell.substring(1).equals(endCell.substring(1))){
			cell = ((char)(cell.charAt(0) + 1)) + startCell.substring(1);
			if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
				return 1 + count(startCell, cell, endCell);
			}else{
				return count(startCell, cell, endCell);
			}
		}else{
			cell = cell.charAt(0) + "" + (Integer.parseInt(cell.substring(1)) + 1) ;
			if(grid[loc.getRow()][loc.getCol()] instanceof RealCell){
				return 1 + count(startCell, cell, endCell);
			}else{
				return count(startCell, cell, endCell);
			}
			
		}
	}
		
}
