//Brandon Nguyen, 2nd Period
package textExcel;

public class FormulaCell extends RealCell{
	
	private String formula;
	private Cell[][] grid;

	public FormulaCell(String formula, Cell[][] spreadsheet) {
		// TODO Auto-generated constructor stub
		this.formula = formula;
		this.grid = spreadsheet;
		setRealCell(formula);
	}

	public double getDoubleValue(){
		String[] formula = getRealCell().split(" ");
		if(formula.length == 3){
			System.out.println(formula[1]);
			return Double.parseDouble(formula[1]);
		}
		if((formula[1].toUpperCase().equals("AVG")) || (formula[1].toUpperCase().equals("SUM"))){
			double count = 1.0;
			formula[2] = formula[2].toUpperCase();
			System.out.println("thingy" + formula[2]);
			int startRow = Integer.parseInt(formula[2].toUpperCase().substring(1, formula[2].indexOf('-')));
			int startCol = formula[2].charAt(0) + 'A';
			int endRow = Integer.parseInt(formula[2].toUpperCase().substring(formula[2].indexOf('-') + 2));
			int endCol = formula[2].charAt(formula[2].indexOf('-') + 1) + 'A';
			//System.out.println("start r" + startRow);
			//System.out.println("start c" + startCol);
			//System.out.println("end r" + endRow);
			//System.out.println("end c" + endCol);
			for(int i = startCol; i <= endCol; i++ ){
				if(startCol != endCol){
					for(int j = startRow; j <= 20; j++){
						count++;
						//System.out.println("count" + count);
					}
					startRow = 0;
					
					//System.out.println(startRow);
				}else{
					for(int j = startRow; j <= endRow; j++){
						count++;
						
					//	System.out.println("count" + count);
					}
				}
			}
			
			if(formula[1].toUpperCase().equals("AVG")){
				//System.out.println("in avg" +formula[2].toUpperCase().substring(0, formula[2].indexOf('-')) + " " + 
						//formula[2].toUpperCase().substring(formula[2].indexOf('-') + 1));
				
				return avg(formula[2].toUpperCase().substring(0, formula[2].indexOf('-')), 0.0, count, 
						formula[2].toUpperCase().substring(formula[2].indexOf('-') + 1));
			}
			/*}else{
				return sum();
			}*/

		//}else if(){
			
		}else{
			double storeVal = 0.0;
			for(int i = 1; i < formula.length - 2; i += 2 ){
				double num = 0.0;
				double secondNum = 0.0;
				if(formula[i].toUpperCase().charAt(0) >= 'A' && formula[i].toUpperCase().charAt(0) <='L' 
						&& formula[i+2].toUpperCase().charAt(0) >= 'A' 
						&& formula[i+2].toUpperCase().charAt(0) <= 'L' ){
					//System.out.println(formula[i]);
					SpreadsheetLocation cell = new SpreadsheetLocation(formula[i]);
					//System.out.println(grid[cell.getRow()][cell.getCol()].abbreviatedCellText());
					formula[i] = grid[cell.getRow()][cell.getCol()].abbreviatedCellText();
					
					formula[i+2] = formula[i+2].toUpperCase();
					SpreadsheetLocation cell2 = new SpreadsheetLocation(formula[i + 2]);
					//System.out.println(formula[i + 2]);
					formula[i + 2] = grid[cell2.getRow()][cell2.getCol()].abbreviatedCellText();
					//System.out.println(formula[i + 2]);
				}else if(formula[i].toUpperCase().charAt(0) >= 'A' && formula[i].toUpperCase().charAt(0) <= 'L'){
						formula[i] = formula[i].toUpperCase();
						//System.out.println(formula[i]);
						SpreadsheetLocation cell = new SpreadsheetLocation(formula[i]);
						//System.out.println(grid[cell.getRow()][cell.getCol()].abbreviatedCellText());
						formula[i] = grid[cell.getRow()][cell.getCol()].abbreviatedCellText();

				}else if(formula[i + 2].toUpperCase().charAt(0) >= 'A' && formula[i + 2].toUpperCase().charAt(0) <= 'L'){
						formula[i+2] = formula[i+2].toUpperCase();
						SpreadsheetLocation cell = new SpreadsheetLocation(formula[i + 2]);
						//System.out.println(formula[i + 2]);
						formula[i + 2] = grid[cell.getRow()][cell.getCol()].abbreviatedCellText();
						//System.out.println(secondNum);
				}
				
				num = Double.parseDouble(formula[i]);
				System.out.println(num);
				secondNum = Double.parseDouble(formula[i + 2]);
				System.out.println(secondNum);
				
				if(formula[i + 1].equals("*")){
					storeVal = num * secondNum;
					
				}else if(formula[i + 1].equals("/")){
					storeVal = num / secondNum;
				}else if(formula[i + 1].equals("+")){
					storeVal = num + secondNum;
				}else{
					storeVal = num - secondNum;
				}
				formula[i+2] = Double.toString(storeVal);
				System.out.println(formula[i+2]);
				System.out.println(storeVal);
			}
			System.out.println(storeVal);
			return storeVal;
		}
		return 0.0;
	}
	
	public double avg(String cell, double sum, double count, String end){
		SpreadsheetLocation loc = new SpreadsheetLocation(cell);
		if(cell.equals(end)){
			SpreadsheetLocation area = new SpreadsheetLocation(end);
			System.out.println("in last part" + area);
			//System.out.println(end);
			sum += Double.parseDouble(grid[loc.getRow()][loc.getCol()].abbreviatedCellText())
					+ Double.parseDouble(grid[area.getRow()][area.getCol()].abbreviatedCellText());
			//System.out.println(sum);
			sum = sum / count;
			//System.out.println(sum);
			return sum;
		}else{
			double first = 
					Double.parseDouble(grid[loc.getRow()][loc.getCol()].abbreviatedCellText());
			//System.out.println(" part of recursion" + first);
			double second = 
					Double.parseDouble(grid[loc.getRow() + 1][loc.getCol()].abbreviatedCellText());
			//System.out.println(second);
			sum += first + second;
			//System.out.println("sum of 1 and 2 " + sum);
			//System.out.println(Integer.parseInt(cell.substring(1)));
			//System.out.println(Integer.parseInt(cell.substring(1)) < 20);
			//System.out.println(cell.charAt(0) == end.charAt(0));
			String newCell = "";
			//System.out.println(newCell);
			if(cell.charAt(0) == end.charAt(0) && Integer.parseInt(cell.substring(1)) < 20){
				newCell = cell.charAt(0) + "";
				newCell += Integer.parseInt(cell.substring(1)) + 1;
				//System.out.println("new Cell value" + newCell);
			}else{
				//System.out.println("new Cell value" + newCell);
				newCell = cell.charAt('0') + 1 + "";
				newCell += 1;
				//System.out.println("new Cell value" + newCell);
			}
				
			System.out.println(sum);
			//System.out.println(sum + avg(newCell, sum, count, end));
			return sum + avg(newCell, sum, count, end);
			
		}
	}
}
